public Boolean isPrime(Integer num) {
    
    /*
    A prime number is a number greater than 1 that is not evenly divisible by any number greater than one and smaller than itself. For example, 13 is a prime number because it is not evenly divisible by any number between 1 and 13.
    Implement the function isPrime that takes as input an integer greater than 1, returns true if the integer is a prime number, and returns false otherwise. Assume that the input will always be greater than 1.
    Example 1: isPrime(10) = false. 10 is not a prime number because it is evenly divisible by 2 and 5.
    Example 2: isPrime(23) = true. 23 is a prime number because it is not evenly divisible by any number from 2 to 22.
    */
    
    //code here
    Integer count = 2;
    Integer primevalues = 0;

    WHILE(count < num - 1){
        IF(Math.mod(num, count) == 0) primevalues++;
        count++;
    }
    return primevalues == 0;
}